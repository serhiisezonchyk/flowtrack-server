// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(uuid())
  login        String    @unique
  password     String    
  googleId     String    @default("")
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  refreshToken Refresh[]
  boards       Board[]
}

model Refresh {
  id        String   @id @default(uuid())
  token     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expiresAt Int
  userId    String
}

model Board {
  id          String    @id @default(uuid())
  title       String
  description String    @default("Add description here\nðŸŸ¢ You can add multiline description\nðŸŸ¢ Let's start...")
  isSaved     Boolean   @default(false)
  slug        String
  icon        String    @default("ðŸ“ƒ")
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  sections    Section[]

  @@unique([userId, slug])
}

model Section {
  id       String @id @default(uuid())
  title    String @default("Untitled")
  position Int
  boardId  String
  board    Board  @relation(fields: [boardId], references: [id], onDelete: Cascade)
  tasks    Task[]
}

model Task {
  id        String    @id @default(uuid())
  title     String    @default("New task")
  content   String    @default("")
  position  Int
  createdAt DateTime  @default(now())
  deadline  DateTime?
  sectionId String
  section   Section   @relation(fields: [sectionId], references: [id], onDelete: Cascade)
}
